{"version":3,"sources":["Coin.js","head_image.jpg","tail_image.jpg","CoinContainer.js","helpers.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","props","className","src","imgSrc","alt","side","duration","CoinContainer","useState","coin","setCoin","headCount","setHeadCount","tailCount","setTailCount","currCoin","onClick","arr","newCoin","coins","Math","floor","random","length","oldCount","defaultProps","head","tail","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAeeA,MATf,SAAcC,GACZ,OACE,qBAAKC,UAAU,OAAf,SACE,cAAC,IAAD,CAAgBC,IAAKF,EAAMG,OAAQC,IAAKJ,EAAMK,KAAMC,SAAU,SCTrD,MAA0B,uCCA1B,MAA0B,uC,MCSzC,SAASC,EAAcP,GAAQ,IAAD,EACJQ,mBAAS,MADL,mBACrBC,EADqB,KACfC,EADe,OAEMF,mBAAS,GAFf,mBAErBG,EAFqB,KAEVC,EAFU,OAGMJ,mBAAS,GAHf,mBAGrBK,EAHqB,KAGVC,EAHU,KAetBC,EAAWN,EACf,cAAC,EAAD,CAAMJ,KAAMI,EAAKJ,KAAMF,OAAQM,EAAKN,SAClC,KAEJ,OACE,sBAAKF,UAAU,gBAAf,UACE,mDACCc,EACD,wBAAQC,QAlBQ,WAClB,ICfYC,EDeNC,GCfMD,EDeWjB,EAAMmB,OCdbC,KAAKC,MAAMD,KAAKE,SAAWL,EAAIM,SDe/Cb,EAAQQ,GACa,SAAjBA,EAAQb,KACVO,GAAa,SAAAY,GAAQ,OAAIA,EAAW,KAEpCV,GAAa,SAAAU,GAAQ,OAAIA,EAAW,MAYpC,sBACA,wCACUb,EAAYE,EADtB,2BACyDF,EADzD,cAEOE,EAFP,gBAQNN,EAAckB,aAAe,CAC3BN,MAAO,CACL,CACEd,KAAM,OACNF,OAAQuB,GAEV,CACErB,KAAM,OACNF,OAAQwB,KAKCpB,QE1CAqB,MARf,WACE,OACE,qBAAK3B,UAAU,MAAf,SACE,cAAC,EAAD,OCKS4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0a846a99.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Coin.css\";\nimport CrossfadeImage from \"react-crossfade-image\";\n\n/** Coin: simple & stateless: just show the name & image of current coin. */\n\nfunction Coin(props) {\n  return (\n    <div className=\"Coin\">\n      <CrossfadeImage src={props.imgSrc} alt={props.side} duration={1000} />\n      {/* <img src={props.imgSrc} alt={props.side} /> */}\n    </div>\n  );\n}\n\nexport default Coin;\n","export default __webpack_public_path__ + \"static/media/head_image.436eba2f.jpg\";","export default __webpack_public_path__ + \"static/media/tail_image.2df29650.jpg\";","import React, { useState } from \"react\";\nimport Coin from \"./Coin\";\nimport head from \"./head_image.jpg\";\nimport tail from \"./tail_image.jpg\";\nimport \"./CoinContainer.css\";\nimport { choice } from \"./helpers\";\n\n/** CoinContainer: holds state about #flips/#heads/#tails, and current coin. */\n\nfunction CoinContainer(props) {\n  const [coin, setCoin] = useState(null);\n  const [headCount, setHeadCount] = useState(0);\n  const [tailCount, setTailCount] = useState(0);\n\n  const handleClick = () => {\n    const newCoin = choice(props.coins);\n    setCoin(newCoin);\n    if (newCoin.side === \"head\") {\n      setHeadCount(oldCount => oldCount + 1);\n    } else {\n      setTailCount(oldCount => oldCount + 1);\n    }\n  };\n\n  const currCoin = coin ? (\n    <Coin side={coin.side} imgSrc={coin.imgSrc} />\n  ) : null;\n\n  return (\n    <div className=\"CoinContainer\">\n      <h2>Let's flip a coin</h2>\n      {currCoin}\n      <button onClick={handleClick}>Flip Me!</button>\n      <p>\n        Out of {headCount + tailCount} flips, there have been {headCount} heads\n        and {tailCount} tails.\n      </p>\n    </div>\n  );\n}\n\nCoinContainer.defaultProps = {\n  coins: [\n    {\n      side: \"head\",\n      imgSrc: head\n    },\n    {\n      side: \"tail\",\n      imgSrc: tail\n    }\n  ]\n};\n\nexport default CoinContainer;\n","function choice(arr) {\n  let randomIndex = Math.floor(Math.random() * arr.length);\n  return arr[randomIndex];\n}\n\nexport { choice };","import React from \"react\";\nimport \"./App.css\";\nimport CoinContainer from \"./CoinContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CoinContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}